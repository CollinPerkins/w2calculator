{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","calculateStateTotals","yearToDate","state","toatlIncome","grossWage","bonus","commission","vacation","holidays","incomeOther","totalTaxesWithheld","federalTaxWithheld","socialSecurity","medicare","totalTaxableDeductions","medicalHealthcare","dental","pensionOr401k","healthSavingsAccount","vision","flexSpending","taxableDeductionsOther","totalNonTaxableDeductions","disability","lifeInsurance","nonTaxableDeductionsOther","netPay","taxablePay","currentPayPeriod","setState","calculatePayPeriodsLeft","date","type","newDate","Date","payPeriodsLeft","Math","floor","getFullYear","daysInMonth","getMonth","getDate","month","day","payPeriodTypeChange","value","payPeriodType","payPeriodEndDateChange","dateString","payPeriodEndDate","onChangeYTD","event","target","checked","name","edited","Number","onChangeCurrentPayPeriod","calculateCurrentTotals","caculatedEndOfYear","calculateEOYTotals","calculateAllTotals","this","Option","Select","className","style","width","onChange","map","option","format","span","defaultValue","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00689d60.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, InputNumber, DatePicker  } from 'antd';\n\nimport { Select } from 'antd';\n\nimport 'antd/dist/antd.css'; \n// import moment from 'moment';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      payPeriodType: null,\n      payPeriodEndDate: null,\n      payPeriodsLeft: 0,\n      yearToDate: {\n        // Income\n        grossWage: 85673.04,\n        bonus: 9002.20,\n        commission: 21000,\n        vacation: 0,\n        holidays: 1557.60,\n        incomeOther: 125,\n\n        // Total Income\n        toatlIncome: 0,\n\n\n        // Taxes Withheld        \n        federalTaxWithheld: 16332.88,\n        socialSecurity: 6885.18,\n        medicare: 1610.24,\n\n        // Total Taxes Withheld\n        totalTaxesWithheld: 0,\n\n\n        // Taxable Deductions\n        medicalHealthcare: 4209.20,\n        dental: 713.66,\n        pensionOr401k: 6978.40,\n        healthSavingsAccount: 1307.64,\n        vision: 217.26,\n        flexSpending: 0,        \n        taxableDeductionsOther: 0,\n\n        // Total Taxable Deductions\n        totalTaxableDeductions: 0,\n\n\n        // Non Taxable Deductions\n        disability: 9.86,\n        lifeInsurance: 141.27,\n        nonTaxableDeductionsOther: 0,\n\n        // Total Non Taxable Deductions\n        totalNonTaxableDeductions: 0,\n       \n        netPay: 0,\n        taxablePay: 0,\n      },\n      currentPayPeriod: {\n        // Income\n        grossWage: 5192.30,\n        bonus: 0,\n        commission: 0,\n        vacation: 0,\n        holidays: 0,\n        incomeOther: 0,\n\n        // Total Income\n        toatlIncome: 0,\n\n\n        // Taxes Withheld        \n        federalTaxWithheld: 435.62,\n        socialSecurity: 298.92,\n        medicare: 69.90,\n\n        // Total Taxes Withheld\n        totalTaxesWithheld: 0,\n\n\n        // Taxable Deductions\n        medicalHealthcare: 247.60,\n        dental: 41.98 ,\n        pensionOr401k: 415.38,\n        healthSavingsAccount: 76.92,\n        vision: 12.78,\n        flexSpending: 0,        \n        taxableDeductionsOther: 0,\n\n        // Total Taxable Deductions\n        totalTaxableDeductions: 0,\n\n\n        // Non Taxable Deductions\n        disability: 8.31,\n        lifeInsurance: 0.58,\n        nonTaxableDeductionsOther: 0,\n\n        // Total Non Taxable Deductions\n        totalNonTaxableDeductions: 0,\n       \n        netPay: 0,\n        taxablePay: 0,\n      },\n      caculatedEndOfYear: {\n         // Income\n        grossWage: 0,\n        bonus: 0,\n        commission: 0,\n        vacation: 0,\n        holidays: 0,\n        incomeOther: 0,\n\n        // Total Income\n        toatlIncome: 0,\n\n\n        // Taxes Withheld        \n        federalTaxWithheld: 0,\n        socialSecurity: 0,\n        medicare: 0,\n\n        // Total Taxes Withheld\n        totalTaxesWithheld: 0,\n\n\n        // Taxable Deductions\n        medicalHealthcare: 0,\n        dental: 0,\n        pensionOr401k: 0,\n        healthSavingsAccount: 0,\n        vision: 0,\n        flexSpending: 0,\n        taxableDeductionsOther: 0,\n\n        // Total Taxable Deductions\n        totalTaxableDeductions: 0,\n\n\n        // Non Taxable Deductions\n        disability: 0,\n        lifeInsurance: 0,\n        nonTaxableDeductionsOther: 0,\n\n        // Total Non Taxable Deductions\n        totalNonTaxableDeductions: 0,\n       \n        netPay: 0,\n        taxablePay: 0,\n      },\n      calculateEOYTotals: {\n         // Income\n         grossWage: 0,\n         bonus: 0,\n         commission: 0,\n         vacation: 0,\n         holidays: 0,\n         incomeOther: 0,\n \n         // Total Income\n         toatlIncome: 0,\n \n \n         // Taxes Withheld        \n         federalTaxWithheld: 0,\n         socialSecurity: 0,\n         medicare: 0,\n \n         // Total Taxes Withheld\n         totalTaxesWithheld: 0,\n \n \n         // Taxable Deductions\n         medicalHealthcare: 0,\n         dental: 0,\n         pensionOr401k: 0,\n         healthSavingsAccount: 0,\n         vision: 0,\n         flexSpending: 0,\n         taxableDeductionsOther: 0,\n \n         // Total Taxable Deductions\n         totalTaxableDeductions: 0,\n \n \n         // Non Taxable Deductions\n         disability: 0,\n         lifeInsurance: 0,\n         nonTaxableDeductionsOther: 0,\n \n         // Total Non Taxable Deductions\n         totalNonTaxableDeductions: 0,\n        \n         netPay: 0,\n         taxablePay: 0,\n      }\n    };\n  }\n\n  componentDidMount () {    \n    this.calculateStateTotals();\n  }\n\n  calculateStateTotals = () => {\n    const yearToDate = this.state.yearToDate;\n\n    yearToDate.toatlIncome = this.state.yearToDate.grossWage + this.state.yearToDate.bonus + this.state.yearToDate.commission + this.state.yearToDate.vacation + this.state.yearToDate.holidays + this.state.yearToDate.incomeOther;\n    yearToDate.totalTaxesWithheld = this.state.yearToDate.federalTaxWithheld + this.state.yearToDate.socialSecurity + this.state.yearToDate.medicare;\n    yearToDate.totalTaxableDeductions = this.state.yearToDate.medicalHealthcare + this.state.yearToDate.dental + this.state.yearToDate.pensionOr401k + this.state.yearToDate.healthSavingsAccount + this.state.yearToDate.vision+ this.state.yearToDate.flexSpending + this.state.yearToDate.taxableDeductionsOther;\n    yearToDate.totalNonTaxableDeductions = this.state.yearToDate.disability + this.state.yearToDate.lifeInsurance + this.state.yearToDate.nonTaxableDeductionsOther;    \n    yearToDate.netPay = this.state.yearToDate.toatlIncome - (this.state.yearToDate.totalTaxesWithheld + this.state.yearToDate.totalTaxableDeductions + this.state.yearToDate.totalNonTaxableDeductions);\n    yearToDate.taxablePay = this.state.yearToDate.toatlIncome - this.state.yearToDate.totalTaxableDeductions;\n\n    \n    const currentPayPeriod = this.state.currentPayPeriod;\n\n    currentPayPeriod.toatlIncome = this.state.currentPayPeriod.grossWage + this.state.currentPayPeriod.bonus + this.state.currentPayPeriod.commission + this.state.currentPayPeriod.vacation + this.state.currentPayPeriod.holidays + this.state.currentPayPeriod.incomeOther;\n    currentPayPeriod.totalTaxesWithheld = this.state.currentPayPeriod.federalTaxWithheld + this.state.currentPayPeriod.socialSecurity + this.state.currentPayPeriod.medicare;\n    currentPayPeriod.totalTaxableDeductions = this.state.currentPayPeriod.medicalHealthcare + this.state.currentPayPeriod.dental + this.state.currentPayPeriod.pensionOr401k + this.state.currentPayPeriod.healthSavingsAccount + this.state.currentPayPeriod.vision+ this.state.currentPayPeriod.flexSpending + this.state.currentPayPeriod.taxableDeductionsOther;\n    currentPayPeriod.totalNonTaxableDeductions = this.state.currentPayPeriod.disability + this.state.currentPayPeriod.lifeInsurance + this.state.currentPayPeriod.nonTaxableDeductionsOther;    \n    currentPayPeriod.netPay = this.state.currentPayPeriod.toatlIncome - (this.state.currentPayPeriod.totalTaxesWithheld + this.state.currentPayPeriod.totalTaxableDeductions + this.state.currentPayPeriod.totalNonTaxableDeductions);\n    currentPayPeriod.taxablePay = this.state.currentPayPeriod.toatlIncome - this.state.currentPayPeriod.totalTaxableDeductions;\n\n    \n\t\tthis.setState({\n      yearToDate: yearToDate, ...this.state.yearToDate,\n      currentPayPeriod: currentPayPeriod, ...this.state.currentPayPeriod\n    });\n  }  \n\n  calculatePayPeriodsLeft = (date, type) =>{\n    var newDate = new Date(date);\n\n    var payPeriodsLeft = Math.floor((newDate - new Date(newDate.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\n    if(type === \"weekly\"){      \n\n      return (365 - payPeriodsLeft) / 7;\n    } else if(type === \"biweekly\") {     \n\n      return (365 - payPeriodsLeft) / 14;\n    } else if(type === \"semimonthly\") {   \n      debugger;\n      var daysInMonthDate = new Date(newDate.getFullYear(), newDate.getMonth() + 1, 0);\n      var daysInMonth = daysInMonthDate.getDate();   \n      var month = newDate.getMonth() + 1;\n      var day = newDate.getDate();\n\n      var monthsLeft = 13 - month;\n      payPeriodsLeft = monthsLeft * 2;\n      \n      if(day === daysInMonth){\n        payPeriodsLeft = payPeriodsLeft - 2;\n      } else if(day >= 15){\n        payPeriodsLeft = payPeriodsLeft - 1;\n      }     \n\n      return payPeriodsLeft;\n    }\n  }\n\n  payPeriodTypeChange = (value) => {\n    this.setState({\n      payPeriodType: value\n    });\n  }\n\n  payPeriodEndDateChange = (date, dateString) => {\n    this.setState({\n      payPeriodEndDate: dateString,\n      payPeriodsLeft: Math.floor(this.calculatePayPeriodsLeft(dateString, this.state.payPeriodType))\n    });\n  }\n\n  onChangeYTD = (event) => {\n    let target = event.target;\n\t\tconst value = target.type === 'checkbox' ? target.checked : target.value;\n\t\tconst name = target.props ? target.props.name : target.name;\n\n\t\tconst edited = this.state.yearToDate;\n    edited[name] = Number(value);\n  \n\t\tthis.setState({\n\t\t\tyearToDate: edited\n    });\n    \n    this.calculateStateTotals();\n  }\n\n  onChangeCurrentPayPeriod = (event) => {\n    let target = event.target;\n\t\tconst value = target.type === 'checkbox' ? target.checked : target.value;\n\t\tconst name = target.props ? target.props.name : target.name;\n\n\t\tconst edited = this.state.currentPayPeriod;\n    edited[name] = Number(value);\n    \n\t\tthis.setState({\n\t\t\tcurrentPayPeriod: edited\n    });\n    \n    this.calculateStateTotals();\n  }\n\n  calculateCurrentTotals = () => {\n    const edited = this.state.caculatedEndOfYear;\n    \n     // Income\n    edited.grossWage = this.state.currentPayPeriod.grossWage * this.state.payPeriodsLeft;\n    edited.bonus = this.state.currentPayPeriod.bonus * this.state.payPeriodsLeft;\n    edited.commission = this.state.currentPayPeriod.commission * this.state.payPeriodsLeft;\n    edited.vacation = this.state.currentPayPeriod.vacation * this.state.payPeriodsLeft;\n    edited.holidays = this.state.currentPayPeriod.holidays * this.state.payPeriodsLeft;\n    edited.incomeOther = this.state.currentPayPeriod.incomeOther * this.state.payPeriodsLeft;\n\n    // Total Income\n    edited.toatlIncome = this.state.currentPayPeriod.toatlIncome * this.state.payPeriodsLeft;\n\n\n    // Taxes Withheld        \n    edited.federalTaxWithheld = this.state.currentPayPeriod.federalTaxWithheld * this.state.payPeriodsLeft;\n    edited.socialSecurity = this.state.currentPayPeriod.socialSecurity * this.state.payPeriodsLeft;\n    edited.medicare = this.state.currentPayPeriod.medicare * this.state.payPeriodsLeft;\n\n    // Total Taxes Withheld\n    edited.totalTaxesWithheld = this.state.currentPayPeriod.totalTaxesWithheld * this.state.payPeriodsLeft;\n\n\n    // Taxable Deductions\n    edited.medicalHealthcare = this.state.currentPayPeriod.medicalHealthcare * this.state.payPeriodsLeft;\n    edited.dental = this.state.currentPayPeriod.dental * this.state.payPeriodsLeft;\n    edited.pensionOr401k = this.state.currentPayPeriod.pensionOr401k * this.state.payPeriodsLeft;\n    edited.healthSavingsAccount = this.state.currentPayPeriod.healthSavingsAccount * this.state.payPeriodsLeft;\n    edited.vision = this.state.currentPayPeriod.vision * this.state.payPeriodsLeft;\n    edited.flexSpending = this.state.currentPayPeriod.flexSpending * this.state.payPeriodsLeft;\n    edited.taxableDeductionsOther = this.state.currentPayPeriod.taxableDeductionsOther * this.state.payPeriodsLeft;\n\n    // Total Taxable Deductions\n    edited.totalTaxableDeductions = this.state.currentPayPeriod.totalTaxableDeductions * this.state.payPeriodsLeft;\n\n\n    // Non Taxable Deductions\n    edited.disability = this.state.currentPayPeriod.disability * this.state.payPeriodsLeft;\n    edited.lifeInsurance = this.state.currentPayPeriod.lifeInsurance * this.state.payPeriodsLeft;\n    edited.nonTaxableDeductionsOther = this.state.currentPayPeriod.nonTaxableDeductionsOther * this.state.payPeriodsLeft;\n\n    // Total Non Taxable Deductions\n    edited.totalNonTaxableDeductions = this.state.currentPayPeriod.totalNonTaxableDeductions * this.state.payPeriodsLeft;\n\n    edited.netPay = this.state.currentPayPeriod.netPay * this.state.payPeriodsLeft;\n    edited.taxablePay = this.state.currentPayPeriod.taxablePay * this.state.payPeriodsLeft;\n    \n    this.setState({\n      caculatedEndOfYear: edited\n    })\n  }\n\n  calculateEOYTotals = () => {\n    const edited = this.state.calculateEOYTotals;\n\n    // Income\n    edited.grossWage = this.state.caculatedEndOfYear.grossWage + this.state.yearToDate.grossWage ; \n    edited.bonus = this.state.caculatedEndOfYear.bonus + this.state.yearToDate.bonus ; \n    edited.commission = this.state.caculatedEndOfYear.commission + this.state.yearToDate.commission ; \n    edited.vacation = this.state.caculatedEndOfYear.vacation + this.state.yearToDate.vacation ; \n    edited.holidays = this.state.caculatedEndOfYear.holidays + this.state.yearToDate.holidays ; \n    edited.incomeOther = this.state.caculatedEndOfYear.incomeOther + this.state.yearToDate.incomeOther ; \n\n    // Total Income\n    edited.toatlIncome = this.state.caculatedEndOfYear.toatlIncome + this.state.yearToDate.toatlIncome ; \n\n\n    // Taxes Withheld        \n    edited.federalTaxWithheld = this.state.caculatedEndOfYear.federalTaxWithheld + this.state.yearToDate.federalTaxWithheld ; \n    edited.socialSecurity = this.state.caculatedEndOfYear.socialSecurity + this.state.yearToDate.socialSecurity ; \n    edited.medicare = this.state.caculatedEndOfYear.medicare + this.state.yearToDate.medicare ; \n\n    // Total Taxes Withheld\n    edited.totalTaxesWithheld = this.state.caculatedEndOfYear.totalTaxesWithheld + this.state.yearToDate.totalTaxesWithheld ; \n\n\n    // Taxable Deductions\n    edited.medicalHealthcare = this.state.caculatedEndOfYear.medicalHealthcare + this.state.yearToDate.medicalHealthcare ; \n    edited.dental = this.state.caculatedEndOfYear.dental + this.state.yearToDate.dental ; \n    edited.pensionOr401k = this.state.caculatedEndOfYear.pensionOr401k + this.state.yearToDate.pensionOr401k ; \n    edited.healthSavingsAccount = this.state.caculatedEndOfYear.healthSavingsAccount + this.state.yearToDate.healthSavingsAccount ; \n    edited.vision = this.state.caculatedEndOfYear.vision + this.state.yearToDate.vision ; \n    edited.flexSpending = this.state.caculatedEndOfYear.flexSpending + this.state.yearToDate.flexSpending ; \n    edited.taxableDeductionsOther = this.state.caculatedEndOfYear.taxableDeductionsOther + this.state.yearToDate.taxableDeductionsOther ; \n\n    // Total Taxable Deductions\n    edited.totalTaxableDeductions = this.state.caculatedEndOfYear.totalTaxableDeductions + this.state.yearToDate.totalTaxableDeductions ; \n\n\n    // Non Taxable Deductions\n    edited.disability = this.state.caculatedEndOfYear.disability + this.state.yearToDate.disability ; \n    edited.lifeInsurance = this.state.caculatedEndOfYear.lifeInsurance + this.state.yearToDate.lifeInsurance ; \n    edited.nonTaxableDeductionsOther = this.state.caculatedEndOfYear.nonTaxableDeductionsOther + this.state.yearToDate.nonTaxableDeductionsOther ; \n\n    // Total Non Taxable Deductions\n    edited.totalNonTaxableDeductions = this.state.caculatedEndOfYear.totalNonTaxableDeductions + this.state.yearToDate.totalNonTaxableDeductions ; \n\n    edited.netPay = this.state.caculatedEndOfYear.netPay + this.state.yearToDate.netPay ; \n    edited.taxablePay = this.state.caculatedEndOfYear.taxablePay + this.state.yearToDate.taxablePay ; \n\n    this.setState({\n      calculateEOYTotals: edited\n    })\n  }\n\n  calculateAllTotals = () => {\n    this.calculateCurrentTotals();\n    this.calculateEOYTotals();\n  }\n\n\n  render() {  \n    const { Option } = Select;\n\n    const payPeriods = [\n      {\n        name: \"weekly\"\n      },\n      {\n        name: \"biweekly\"\n      },\n      {\n        name: \"semimonthly\"\n      }\n    ];\n\n    return (\n      <div className=\"App\">\n        <div>\n          <Select style={{ width: 120 }} onChange={(value) => this.payPeriodTypeChange(value)}>            \n            {payPeriods.map(option=> (\n              <Option key={option.name}>{option.name}</Option>\n            ))}\n          </Select>\n        </div>\n        {\n          this.state.payPeriodType === null ? \"\" :\n          <div>\n            <DatePicker style={{ width: 120 }} onChange={this.payPeriodEndDateChange} format={'MM/DD/YYYY'} />          \n          </div> \n        }\n        {\n          (this.state.payPeriodEndDate === null) ? \"\" : this.state.payPeriodsLeft\n        }\n        <Row>\n          <Col span={12}>\n            <h3>Year To Date Inputs</h3>\n            <div>\n              <label>grossWage</label>\n              <input \n                type=\"number\"\n                name=\"grossWage\"\n                defaultValue={this.state.yearToDate.grossWage}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>bonus</label>\n              <input \n                type=\"number\"\n                name=\"bonus\"\n                defaultValue={this.state.yearToDate.bonus}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>commission</label>\n              <input \n                type=\"number\"\n                name=\"commission\"\n                defaultValue={this.state.yearToDate.commission}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>vacation</label>\n              <input \n                type=\"number\"\n                name=\"vacation\"\n                defaultValue={this.state.yearToDate.vacation}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>holidays</label>\n              <input \n                type=\"number\"\n                name=\"holidays\"\n                defaultValue={this.state.yearToDate.holidays}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>incomeOther</label>\n              <input \n                type=\"number\"\n                name=\"incomeOther\"\n                defaultValue={this.state.yearToDate.incomeOther}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>federalTaxWithheld</label>\n              <input \n                type=\"number\"\n                name=\"federalTaxWithheld\"\n                defaultValue={this.state.yearToDate.federalTaxWithheld}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>socialSecurity</label>\n              <input \n                type=\"number\"\n                name=\"socialSecurity\"\n                defaultValue={this.state.yearToDate.socialSecurity}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>medicare</label>\n              <input \n                type=\"number\"\n                name=\"medicare\"\n                defaultValue={this.state.yearToDate.medicare}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>medicalHealthcare</label>\n              <input \n                type=\"number\"\n                name=\"medicalHealthcare\"\n                defaultValue={this.state.yearToDate.medicalHealthcare}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>dental</label>\n              <input \n                type=\"number\"\n                name=\"dental\"\n                defaultValue={this.state.yearToDate.dental}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>pensionOr401k</label>\n              <input \n                type=\"number\"\n                name=\"pensionOr401k\"\n                defaultValue={this.state.yearToDate.pensionOr401k}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>healthSavingsAccount</label>\n              <input \n                type=\"number\"\n                name=\"healthSavingsAccount\"\n                defaultValue={this.state.yearToDate.healthSavingsAccount}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>vision</label>\n              <input \n                type=\"number\"\n                name=\"vision\"\n                defaultValue={this.state.yearToDate.vision}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>flexSpending</label>\n              <input \n                type=\"number\"\n                name=\"flexSpending\"\n                defaultValue={this.state.yearToDate.flexSpending}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>taxableDeductionsOther</label>\n              <input \n                type=\"number\"\n                name=\"taxableDeductionsOther\"\n                defaultValue={this.state.yearToDate.taxableDeductionsOther}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>disability</label>\n              <input \n                type=\"number\"\n                name=\"disability\"\n                defaultValue={this.state.yearToDate.disability}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>lifeInsurance</label>\n              <input \n                type=\"number\"\n                name=\"lifeInsurance\"\n                defaultValue={this.state.yearToDate.lifeInsurance}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>nonTaxableDeductionsOther</label>\n              <input \n                type=\"number\"\n                name=\"nonTaxableDeductionsOther\"\n                defaultValue={this.state.yearToDate.nonTaxableDeductionsOther}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>netPay</label>\n              <input \n                type=\"number\"\n                name=\"netPay\"\n                defaultValue={this.state.yearToDate.netPay}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>taxablePay</label>\n              <input \n                type=\"number\"\n                name=\"taxablePay\"\n                defaultValue={this.state.yearToDate.taxablePay}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n            <div>\n              <label>medicare</label>\n              <input \n                type=\"number\"\n                name=\"medicare\"\n                defaultValue={this.state.yearToDate.medicare}\n                onChange={this.onChangeYTD}\n              />\n            </div>\n          </Col>\n          <Col span={12}>   \n            <h3>Current Paycheck Inputs</h3> \n            <div>\n              <label>grossWage</label>\n              <input \n                type=\"number\"\n                name=\"grossWage\"\n                defaultValue={this.state.currentPayPeriod.grossWage}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>bonus</label>\n              <input \n                type=\"number\"\n                name=\"bonus\"\n                defaultValue={this.state.currentPayPeriod.bonus}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>commission</label>\n              <input \n                type=\"number\"\n                name=\"commission\"\n                defaultValue={this.state.currentPayPeriod.commission}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>vacation</label>\n              <input \n                type=\"number\"\n                name=\"vacation\"\n                defaultValue={this.state.currentPayPeriod.vacation}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>holidays</label>\n              <input \n                type=\"number\"\n                name=\"holidays\"\n                defaultValue={this.state.currentPayPeriod.holidays}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>incomeOther</label>\n              <input \n                type=\"number\"\n                name=\"incomeOther\"\n                defaultValue={this.state.currentPayPeriod.incomeOther}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>federalTaxWithheld</label>\n              <input \n                type=\"number\"\n                name=\"federalTaxWithheld\"\n                defaultValue={this.state.currentPayPeriod.federalTaxWithheld}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>socialSecurity</label>\n              <input \n                type=\"number\"\n                name=\"socialSecurity\"\n                defaultValue={this.state.currentPayPeriod.socialSecurity}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>medicare</label>\n              <input \n                type=\"number\"\n                name=\"medicare\"\n                defaultValue={this.state.currentPayPeriod.medicare}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>medicalHealthcare</label>\n              <input \n                type=\"number\"\n                name=\"medicalHealthcare\"\n                defaultValue={this.state.currentPayPeriod.medicalHealthcare}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>dental</label>\n              <input \n                type=\"number\"\n                name=\"dental\"\n                defaultValue={this.state.currentPayPeriod.dental}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>pensionOr401k</label>\n              <input \n                type=\"number\"\n                name=\"pensionOr401k\"\n                defaultValue={this.state.currentPayPeriod.pensionOr401k}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>healthSavingsAccount</label>\n              <input \n                type=\"number\"\n                name=\"healthSavingsAccount\"\n                defaultValue={this.state.currentPayPeriod.healthSavingsAccount}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>vision</label>\n              <input \n                type=\"number\"\n                name=\"vision\"\n                defaultValue={this.state.currentPayPeriod.vision}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>flexSpending</label>\n              <input \n                type=\"number\"\n                name=\"flexSpending\"\n                defaultValue={this.state.currentPayPeriod.flexSpending}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>taxableDeductionsOther</label>\n              <input \n                type=\"number\"\n                name=\"taxableDeductionsOther\"\n                defaultValue={this.state.currentPayPeriod.taxableDeductionsOther}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>disability</label>\n              <input \n                type=\"number\"\n                name=\"disability\"\n                defaultValue={this.state.currentPayPeriod.disability}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>lifeInsurance</label>\n              <input \n                type=\"number\"\n                name=\"lifeInsurance\"\n                defaultValue={this.state.currentPayPeriod.lifeInsurance}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>nonTaxableDeductionsOther</label>\n              <input \n                type=\"number\"\n                name=\"nonTaxableDeductionsOther\"\n                defaultValue={this.state.currentPayPeriod.nonTaxableDeductionsOther}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>netPay</label>\n              <input \n                type=\"number\"\n                name=\"netPay\"\n                defaultValue={this.state.currentPayPeriod.netPay}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>taxablePay</label>\n              <input \n                type=\"number\"\n                name=\"taxablePay\"\n                defaultValue={this.state.currentPayPeriod.taxablePay}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n            <div>\n              <label>medicare</label>\n              <input \n                type=\"number\"\n                name=\"medicare\"\n                defaultValue={this.state.currentPayPeriod.medicare}\n                onChange={this.onChangeCurrentPayPeriod}\n              />\n            </div>\n          </Col>\n        </Row>\n        <button onClick={this.calculateAllTotals}>Submit</button>\n        <div>\n          <p>Taxable Wages: {this.state.calculateEOYTotals.taxablePay}</p>\n          <p>Federal Tax Withheld: {this.state.calculateEOYTotals.federalTaxWithheld}</p>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}