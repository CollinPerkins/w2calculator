(this.webpackJsonpw2calculator=this.webpackJsonpw2calculator||[]).push([[0],{101:function(e,a,t){},140:function(e,a,t){"use strict";t.r(a);var n=t(1),i=t(0),s=t.n(i),r=t(25),c=t.n(r),l=(t(101),t(52)),d=t(77),o=t(78),h=t(93),u=t(92),b=t(142),y=t(145),j=t(146),O=t(143),x=(t(102),function(e){Object(h.a)(t,e);var a=Object(u.a)(t);function t(e){var n;return Object(d.a)(this,t),(n=a.call(this,e)).calculatePayPeriodsLeft=function(e,a){var t=new Date(e),n=Math.floor((t-new Date(t.getFullYear(),0,0))/1e3/60/60/24);if("weekly"===a)return(365-n)/7;if("biweekly"===a)return(365-n)/14;if("semimonthly"===a){var i=new Date(t.getFullYear(),t.getMonth()+1,0).getDate(),s=t.getMonth()+1,r=t.getDate();return n=2*(13-s),r===i?n-=2:r>=15&&(n-=1),n}},n.payPeriodTypeChange=function(e){n.setState({payPeriodType:e})},n.payPeriodEndDateChange=function(e,a){n.setState({payPeriodEndDate:a,payPeriodsLeft:Math.floor(n.calculatePayPeriodsLeft(a,n.state.payPeriodType))})},n.onChangeYTD=function(e){var a=e.target,t="checkbox"===a.type?a.checked:a.value,i=a.props?a.props.name:a.name,s=n.state.yearToDate;s[i]=Number(t),s.isActive=!0,n.setState({yearToDate:s})},n.onChangeCurrentPayPeriod=function(e){var a=e.target,t="checkbox"===a.type?a.checked:a.value,i=a.props?a.props.name:a.name,s=n.state.currentPayPeriod;s[i]=Number(t),s.isActive=!0,n.setState({currentPayPeriod:s})},n.calculateCurrentTotals=function(){var e=n.state.caculatedEndOfYear;e.grossWage=n.state.currentPayPeriod.grossWage*n.state.payPeriodsLeft,e.bonus=n.state.currentPayPeriod.bonus*n.state.payPeriodsLeft,e.commission=n.state.currentPayPeriod.commission*n.state.payPeriodsLeft,e.vacation=n.state.currentPayPeriod.vacation*n.state.payPeriodsLeft,e.holidays=n.state.currentPayPeriod.holidays*n.state.payPeriodsLeft,e.incomeOther=n.state.currentPayPeriod.incomeOther*n.state.payPeriodsLeft,e.federalTaxWithheld=n.state.currentPayPeriod.federalTaxWithheld*n.state.payPeriodsLeft,e.socialSecurity=n.state.currentPayPeriod.socialSecurity*n.state.payPeriodsLeft,e.medicare=n.state.currentPayPeriod.medicare*n.state.payPeriodsLeft,e.medicalHealthcare=n.state.currentPayPeriod.medicalHealthcare*n.state.payPeriodsLeft,e.dental=n.state.currentPayPeriod.dental*n.state.payPeriodsLeft,e.pensionOr401k=n.state.currentPayPeriod.pensionOr401k*n.state.payPeriodsLeft,e.healthSavingsAccount=n.state.currentPayPeriod.healthSavingsAccount*n.state.payPeriodsLeft,e.vision=n.state.currentPayPeriod.vision*n.state.payPeriodsLeft,e.flexSpending=n.state.currentPayPeriod.flexSpending*n.state.payPeriodsLeft,e.taxableDeductionsOther=n.state.currentPayPeriod.taxableDeductionsOther*n.state.payPeriodsLeft,e.disability=n.state.currentPayPeriod.disability*n.state.payPeriodsLeft,e.lifeInsurance=n.state.currentPayPeriod.lifeInsurance*n.state.payPeriodsLeft,e.nonTaxableDeductionsOther=n.state.currentPayPeriod.nonTaxableDeductionsOther*n.state.payPeriodsLeft,e.netPay=n.state.currentPayPeriod.netPay*n.state.payPeriodsLeft,e.taxablePay=n.state.currentPayPeriod.taxablePay*n.state.payPeriodsLeft,e.federalTaxWithheld=n.state.currentPayPeriod.federalTaxWithheld*n.state.payPeriodsLeft,e.socialSecurityTax=n.state.currentPayPeriod.socialSecurityTax*n.state.payPeriodsLeft,e.medicare=n.state.currentPayPeriod.medicare*n.state.payPeriodsLeft,n.setState({caculatedEndOfYear:e})},n.calculateEOYTotals=function(){var e=n.state.calculateEOYTotals;e.grossWage=n.state.caculatedEndOfYear.grossWage+n.state.yearToDate.grossWage,e.bonus=n.state.caculatedEndOfYear.bonus+n.state.yearToDate.bonus,e.commission=n.state.caculatedEndOfYear.commission+n.state.yearToDate.commission,e.vacation=n.state.caculatedEndOfYear.vacation+n.state.yearToDate.vacation,e.holidays=n.state.caculatedEndOfYear.holidays+n.state.yearToDate.holidays,e.incomeOther=n.state.caculatedEndOfYear.incomeOther+n.state.yearToDate.incomeOther,e.federalTaxWithheld=n.state.caculatedEndOfYear.federalTaxWithheld+n.state.yearToDate.federalTaxWithheld,e.socialSecurity=n.state.caculatedEndOfYear.socialSecurity+n.state.yearToDate.socialSecurity,e.medicare=n.state.caculatedEndOfYear.medicare+n.state.yearToDate.medicare,e.medicalHealthcare=n.state.caculatedEndOfYear.medicalHealthcare+n.state.yearToDate.medicalHealthcare,e.dental=n.state.caculatedEndOfYear.dental+n.state.yearToDate.dental,e.pensionOr401k=n.state.caculatedEndOfYear.pensionOr401k+n.state.yearToDate.pensionOr401k,e.healthSavingsAccount=n.state.caculatedEndOfYear.healthSavingsAccount+n.state.yearToDate.healthSavingsAccount,e.vision=n.state.caculatedEndOfYear.vision+n.state.yearToDate.vision,e.flexSpending=n.state.caculatedEndOfYear.flexSpending+n.state.yearToDate.flexSpending,e.taxableDeductionsOther=n.state.caculatedEndOfYear.taxableDeductionsOther+n.state.yearToDate.taxableDeductionsOther,e.disability=n.state.caculatedEndOfYear.disability+n.state.yearToDate.disability,e.lifeInsurance=n.state.caculatedEndOfYear.lifeInsurance+n.state.yearToDate.lifeInsurance,e.nonTaxableDeductionsOther=n.state.caculatedEndOfYear.nonTaxableDeductionsOther+n.state.yearToDate.nonTaxableDeductionsOther,e.netPay=n.state.yearToDate.grossWage+n.state.yearToDate.bonus+n.state.yearToDate.commission+n.state.yearToDate.vacation+n.state.yearToDate.holidays+n.state.yearToDate.incomeOther-(n.state.yearToDate.medicalHealthcare+n.state.yearToDate.dental+n.state.yearToDate.pensionOr401k+n.state.yearToDate.healthSavingsAccount+n.state.yearToDate.vision+n.state.yearToDate.flexSpending+n.state.yearToDate.taxableDeductionsOther)+(n.state.caculatedEndOfYear.grossWage+n.state.caculatedEndOfYear.bonus+n.state.caculatedEndOfYear.commission+n.state.caculatedEndOfYear.vacation+n.state.caculatedEndOfYear.holidays+n.state.caculatedEndOfYear.incomeOther)-(n.state.caculatedEndOfYear.medicalHealthcare+n.state.caculatedEndOfYear.dental+n.state.caculatedEndOfYear.pensionOr401k+n.state.caculatedEndOfYear.healthSavingsAccount+n.state.caculatedEndOfYear.vision+n.state.caculatedEndOfYear.flexSpending+n.state.caculatedEndOfYear.taxableDeductionsOther),e.taxablePay=n.state.caculatedEndOfYear.taxablePay+n.state.yearToDate.taxablePay,e.federalTaxWithheld=n.state.caculatedEndOfYear.federalTaxWithheld+n.state.yearToDate.federalTaxWithheld,e.socialSecurityTax=n.state.caculatedEndOfYear.socialSecurityTax+n.state.yearToDate.socialSecurityTax,e.medicare=n.state.caculatedEndOfYear.medicare+n.state.yearToDate.medicare,n.setState({calculateEOYTotals:e})},n.calculateAllTotals=function(){n.calculateCurrentTotals(),n.calculateEOYTotals()},n.state={payPeriodType:null,payPeriodEndDate:null,payPeriodsLeft:0,yearToDate:Object(l.a)({grossWage:85673.04,bonus:9002.2,commission:21e3,vacation:0,holidays:1557.6,incomeOther:125,federalTaxWithheld:16332.88,socialSecurity:6885.18,medicare:1610.24,medicalHealthcare:4209.2,dental:713.66,pensionOr401k:6978.4,healthSavingsAccount:1307.64,vision:217.26,flexSpending:0,taxableDeductionsOther:0,disability:9.86,lifeInsurance:141.27,nonTaxableDeductionsOther:0,netPay:103780.55,taxablePay:103931.68,socialSecurityTax:6885.18},"medicare",1610.24),currentPayPeriod:Object(l.a)({grossWage:5192.3,bonus:0,commission:0,vacation:0,holidays:0,incomeOther:0,federalTaxWithheld:435.62,socialSecurity:298.92,medicare:69.9,medicalHealthcare:247.6,dental:41.98,pensionOr401k:415.38,healthSavingsAccount:76.92,vision:12.78,flexSpending:0,taxableDeductionsOther:0,disability:8.31,lifeInsurance:.58,nonTaxableDeductionsOther:0,netPay:3584.31,taxablePay:4397.64,socialSecurityTax:298.92},"medicare",69.9),caculatedEndOfYear:Object(l.a)({grossWage:0,bonus:0,commission:0,vacation:0,holidays:0,incomeOther:0,federalTaxWithheld:0,socialSecurity:0,medicare:0,medicalHealthcare:0,dental:0,pensionOr401k:0,healthSavingsAccount:0,vision:0,flexSpending:0,taxableDeductionsOther:0,disability:0,lifeInsurance:0,nonTaxableDeductionsOther:0,netPay:0,taxablePay:0,socialSecurityTax:0},"medicare",0),calculateEOYTotals:Object(l.a)({grossWage:0,bonus:0,commission:0,vacation:0,holidays:0,incomeOther:0,federalTaxWithheld:0,socialSecurity:0,medicare:0,medicalHealthcare:0,dental:0,pensionOr401k:0,healthSavingsAccount:0,vision:0,flexSpending:0,taxableDeductionsOther:0,disability:0,lifeInsurance:0,nonTaxableDeductionsOther:0,netPay:0,taxablePay:0,socialSecurityTax:0},"medicare",0)},n}return Object(o.a)(t,[{key:"render",value:function(){var e=this,a=O.a.Option;return Object(n.jsxs)("div",{className:"App",children:[Object(n.jsx)("div",{children:Object(n.jsx)(O.a,{style:{width:120},onChange:function(a){return e.payPeriodTypeChange(a)},children:[{name:"weekly"},{name:"biweekly"},{name:"semimonthly"}].map((function(e){return Object(n.jsx)(a,{children:e.name},e.name)}))})}),null===this.state.payPeriodType?"":Object(n.jsx)("div",{children:Object(n.jsx)(b.a,{style:{width:120},onChange:this.payPeriodEndDateChange,format:"MM/DD/YYYY"})}),null===this.state.payPeriodEndDate?"":this.state.payPeriodsLeft,Object(n.jsxs)(y.a,{children:[Object(n.jsxs)(j.a,{span:12,children:[Object(n.jsx)("h3",{children:"Year To Date Inputs"}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"grossWage"}),Object(n.jsx)("input",{type:"number",name:"grossWage",defaultValue:this.state.yearToDate.grossWage,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"bonus"}),Object(n.jsx)("input",{type:"number",name:"bonus",defaultValue:this.state.yearToDate.bonus,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"commission"}),Object(n.jsx)("input",{type:"number",name:"commission",defaultValue:this.state.yearToDate.commission,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"vacation"}),Object(n.jsx)("input",{type:"number",name:"vacation",defaultValue:this.state.yearToDate.vacation,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"holidays"}),Object(n.jsx)("input",{type:"number",name:"holidays",defaultValue:this.state.yearToDate.holidays,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"incomeOther"}),Object(n.jsx)("input",{type:"number",name:"incomeOther",defaultValue:this.state.yearToDate.incomeOther,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"federalTaxWithheld"}),Object(n.jsx)("input",{type:"number",name:"federalTaxWithheld",defaultValue:this.state.yearToDate.federalTaxWithheld,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"socialSecurity"}),Object(n.jsx)("input",{type:"number",name:"socialSecurity",defaultValue:this.state.yearToDate.socialSecurity,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"medicare"}),Object(n.jsx)("input",{type:"number",name:"medicare",defaultValue:this.state.yearToDate.medicare,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"medicalHealthcare"}),Object(n.jsx)("input",{type:"number",name:"medicalHealthcare",defaultValue:this.state.yearToDate.medicalHealthcare,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"dental"}),Object(n.jsx)("input",{type:"number",name:"dental",defaultValue:this.state.yearToDate.dental,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"pensionOr401k"}),Object(n.jsx)("input",{type:"number",name:"pensionOr401k",defaultValue:this.state.yearToDate.pensionOr401k,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"healthSavingsAccount"}),Object(n.jsx)("input",{type:"number",name:"healthSavingsAccount",defaultValue:this.state.yearToDate.healthSavingsAccount,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"vision"}),Object(n.jsx)("input",{type:"number",name:"vision",defaultValue:this.state.yearToDate.vision,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"flexSpending"}),Object(n.jsx)("input",{type:"number",name:"flexSpending",defaultValue:this.state.yearToDate.flexSpending,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"taxableDeductionsOther"}),Object(n.jsx)("input",{type:"number",name:"taxableDeductionsOther",defaultValue:this.state.yearToDate.taxableDeductionsOther,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"disability"}),Object(n.jsx)("input",{type:"number",name:"disability",defaultValue:this.state.yearToDate.disability,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"lifeInsurance"}),Object(n.jsx)("input",{type:"number",name:"lifeInsurance",defaultValue:this.state.yearToDate.lifeInsurance,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"nonTaxableDeductionsOther"}),Object(n.jsx)("input",{type:"number",name:"nonTaxableDeductionsOther",defaultValue:this.state.yearToDate.nonTaxableDeductionsOther,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"netPay"}),Object(n.jsx)("input",{type:"number",name:"netPay",defaultValue:this.state.yearToDate.netPay,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"taxablePay"}),Object(n.jsx)("input",{type:"number",name:"taxablePay",defaultValue:this.state.yearToDate.taxablePay,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"medicare"}),Object(n.jsx)("input",{type:"number",name:"medicare",defaultValue:this.state.yearToDate.medicare,onChange:this.onChangeYTD})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"socialSecurityTax"}),Object(n.jsx)("input",{type:"number",name:"socialSecurityTax",defaultValue:this.state.yearToDate.socialSecurityTax,onChange:this.onChangeYTD})]})]}),Object(n.jsxs)(j.a,{span:12,children:[Object(n.jsx)("h3",{children:"Current Paycheck Inputs"}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"grossWage"}),Object(n.jsx)("input",{type:"number",name:"grossWage",defaultValue:this.state.currentPayPeriod.grossWage,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"bonus"}),Object(n.jsx)("input",{type:"number",name:"bonus",defaultValue:this.state.currentPayPeriod.bonus,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"commission"}),Object(n.jsx)("input",{type:"number",name:"commission",defaultValue:this.state.currentPayPeriod.commission,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"vacation"}),Object(n.jsx)("input",{type:"number",name:"vacation",defaultValue:this.state.currentPayPeriod.vacation,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"holidays"}),Object(n.jsx)("input",{type:"number",name:"holidays",defaultValue:this.state.currentPayPeriod.holidays,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"incomeOther"}),Object(n.jsx)("input",{type:"number",name:"incomeOther",defaultValue:this.state.currentPayPeriod.incomeOther,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"federalTaxWithheld"}),Object(n.jsx)("input",{type:"number",name:"federalTaxWithheld",defaultValue:this.state.currentPayPeriod.federalTaxWithheld,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"socialSecurity"}),Object(n.jsx)("input",{type:"number",name:"socialSecurity",defaultValue:this.state.currentPayPeriod.socialSecurity,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"medicare"}),Object(n.jsx)("input",{type:"number",name:"medicare",defaultValue:this.state.currentPayPeriod.medicare,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"medicalHealthcare"}),Object(n.jsx)("input",{type:"number",name:"medicalHealthcare",defaultValue:this.state.currentPayPeriod.medicalHealthcare,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"dental"}),Object(n.jsx)("input",{type:"number",name:"dental",defaultValue:this.state.currentPayPeriod.dental,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"pensionOr401k"}),Object(n.jsx)("input",{type:"number",name:"pensionOr401k",defaultValue:this.state.currentPayPeriod.pensionOr401k,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"healthSavingsAccount"}),Object(n.jsx)("input",{type:"number",name:"healthSavingsAccount",defaultValue:this.state.currentPayPeriod.healthSavingsAccount,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"vision"}),Object(n.jsx)("input",{type:"number",name:"vision",defaultValue:this.state.currentPayPeriod.vision,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"flexSpending"}),Object(n.jsx)("input",{type:"number",name:"flexSpending",defaultValue:this.state.currentPayPeriod.flexSpending,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"taxableDeductionsOther"}),Object(n.jsx)("input",{type:"number",name:"taxableDeductionsOther",defaultValue:this.state.currentPayPeriod.taxableDeductionsOther,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"disability"}),Object(n.jsx)("input",{type:"number",name:"disability",defaultValue:this.state.currentPayPeriod.disability,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"lifeInsurance"}),Object(n.jsx)("input",{type:"number",name:"lifeInsurance",defaultValue:this.state.currentPayPeriod.lifeInsurance,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"nonTaxableDeductionsOther"}),Object(n.jsx)("input",{type:"number",name:"nonTaxableDeductionsOther",defaultValue:this.state.currentPayPeriod.nonTaxableDeductionsOther,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"netPay"}),Object(n.jsx)("input",{type:"number",name:"netPay",defaultValue:this.state.currentPayPeriod.netPay,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"taxablePay"}),Object(n.jsx)("input",{type:"number",name:"taxablePay",defaultValue:this.state.currentPayPeriod.taxablePay,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"medicare"}),Object(n.jsx)("input",{type:"number",name:"medicare",defaultValue:this.state.currentPayPeriod.medicare,onChange:this.onChangeCurrentPayPeriod})]}),Object(n.jsxs)("div",{children:[Object(n.jsx)("label",{children:"socialSecurityTax"}),Object(n.jsx)("input",{type:"number",name:"socialSecurityTax",defaultValue:this.state.currentPayPeriod.socialSecurityTax,onChange:this.onChangeCurrentPayPeriod})]})]})]}),Object(n.jsx)("button",{onClick:this.calculateAllTotals,children:"Submit"}),Object(n.jsxs)("div",{children:[Object(n.jsxs)("p",{children:["Taxable Wages: ",this.state.calculateEOYTotals.taxablePay]}),Object(n.jsxs)("p",{children:["Federal Tax Withheld: ",this.state.calculateEOYTotals.federalTaxWithheld]})]})]})}}]),t}(s.a.Component)),P=function(e){e&&e instanceof Function&&t.e(3).then(t.bind(null,147)).then((function(a){var t=a.getCLS,n=a.getFID,i=a.getFCP,s=a.getLCP,r=a.getTTFB;t(e),n(e),i(e),s(e),r(e)}))};c.a.render(Object(n.jsx)(s.a.StrictMode,{children:Object(n.jsx)(x,{})}),document.getElementById("root")),P()}},[[140,1,2]]]);
//# sourceMappingURL=main.5ba7b061.chunk.js.map